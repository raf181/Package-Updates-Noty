name: Build and Release (Go)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Build linux/amd64
      run: |
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 \
          go build -ldflags "-s -w -X main.Version=${{ github.event.inputs.version || github.ref_name }}" \
          -o update-noti_linux_amd64 ./cmd/update-noti

    - name: Build linux/arm64
      run: |
        GOOS=linux GOARCH=arm64 CGO_ENABLED=0 \
          go build -ldflags "-s -w -X main.Version=${{ github.event.inputs.version || github.ref_name }}" \
          -o update-noti_linux_arm64 ./cmd/update-noti

    - name: Generate checksums
      run: |
        sha256sum update-noti_linux_* > checksums.txt
        
    - name: Upload binary as artifact
      uses: actions/upload-artifact@v4
      with:
        name: update-noti-binaries
        path: |
          update-noti_linux_amd64
          update-noti_linux_arm64
          checksums.txt
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.version || github.ref_name }}
        name: Package Updates Notifier ${{ github.event.inputs.version || github.ref_name }}
        body: |
          ## ðŸ“¦ Package Updates Notifier Release (Go)

          ### ðŸš€ Installation
          ```bash
          curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/main/install.sh | sudo bash
          ```

          ### ðŸ“‹ What's Included
          - âœ… Go binaries: `update-noti_linux_amd64`, `update-noti_linux_arm64`
          - âœ… Auto-installer with systemd + cron scheduling
          - âœ… Self-updating capability
          - âœ… Multi-package manager support (apt, dnf, yum, pacman, zypper)
          - âœ… Slack integration with clean formatting
          - âœ… System information reporting

          ### ðŸ’» System Requirements
          - Linux amd64/arm64 (Ubuntu, Debian, RHEL, CentOS, Fedora, Arch, openSUSE)
          - Internet connectivity for updates and Slack notifications

          ### ðŸ”§ Configuration
          After installation, configure your packages in `/opt/update-noti/config.json`:
          ```json
          {
            "auto_update": ["tailscale", "netdata", "nginx"],
            "slack_webhook": "https://hooks.slack.com/services/YOUR/WEBHOOK/URL"
          }
          ```

          ### ðŸ“Š Binary Information
          - Built with Go 1.22 on Ubuntu Latest
          - Checksums included in `checksums.txt`

          ---
          **Full documentation:** https://github.com/${{ github.repository }}#readme
        files: |
          update-noti_linux_amd64
          update-noti_linux_arm64
          checksums.txt
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}